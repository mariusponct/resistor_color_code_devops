name: Docker Build and Push

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Docker image tag
        id: set-tag
        run: echo ::set-output name=tag::$(echo "${{ github.sha }}" | cut -c1-7)

      - name: Build Docker image
        run: docker build -t mariuspnct/resistorapp:${{ steps.set-tag.outputs.tag }} .

      - name: Debug Docker image tag
        run: echo "Docker image tag: ${{ steps.set-tag.outputs.tag }}"

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: docker push mariuspnct/resistorapp:${{ steps.set-tag.outputs.tag }}

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: resistor_color_code
          image: docker.io/mariuspnct/resistorapp:${{ steps.set-tag.outputs.tag }}

      - name: debug
        run: cat ${{ steps.task-def.outputs.task-definition }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: resistor_color_code-service
          cluster: resistor_color_code-cluster
          wait-for-service-stability: true
